[versions]
agp = "8.13.0"
alakazam = "6.3.0"
androidx-activity = "1.11.0"
androidx-lifecycle = "2.9.4"
blueprint = "1.1.0"
burst = "2.10.2"
composeAndroidx = "1.9.3"
kotlin = "2.2.20"
kotlinpoet = "2.2.0"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.9.0"
ksp = "2.2.20-2.0.4"
ktor = "3.3.1"
markdown = "0.37.0"
preferences = "2.2.0"
redacted = "1.15.0"
sqldelight = "2.2.0-SNAPSHOT"

[libraries]
alakazam-db-sqldelight = { module = "dev.jonpoulton.alakazam:db-sqldelight", version.ref = "alakazam" }
alakazam-kotlin-compose = { module = "dev.jonpoulton.alakazam:kotlin-compose", version.ref = "alakazam" }
alakazam-kotlin-core = { module = "dev.jonpoulton.alakazam:kotlin-core", version.ref = "alakazam" }
alakazam-kotlin-serialization = { module = "dev.jonpoulton.alakazam:kotlin-serialization", version.ref = "alakazam" }
alakazam-kotlin-time = { module = "dev.jonpoulton.alakazam:kotlin-time", version.ref = "alakazam" }
android-desugaring = { module = "com.android.tools:desugar_jdk_libs", version = "2.1.5" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-activity-core = { module = "androidx.activity:activity", version.ref = "androidx-activity" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-annotation = { module = "androidx.annotation:annotation", version = "1.9.1" }
androidx-compose-annotation = { module = "androidx.compose.runtime:runtime-annotation", version.ref = "composeAndroidx" }
androidx-compose-lint = { module = "com.slack.lint.compose:compose-lint-checks", version = "1.4.2" }
androidx-coreKtx = { module = "androidx.core:core-ktx", version = "1.17.0" }
androidx-crypto = { module = "androidx.security:security-crypto", version = "1.1.0" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-core = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version = "1.2.1" }
androidx-splash = { module = "androidx.core:core-splashscreen", version = "1.0.1" }
blueprint-core = { module = "dev.jonpoulton.blueprint:core", version.ref = "blueprint" }
blueprint-recipes = { module = "dev.jonpoulton.blueprint:recipes", version.ref = "blueprint" }
detektCompose = { module = "io.nlopez.compose.rules:detekt", version = "0.4.27" }
haze-core = { module = "dev.chrisbanes.haze:haze", version = "1.6.10" }
jetbrains-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version = "2.9.1" }
jetbrains-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version = "2.9.5" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinpoet-core = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.7.1" }
kotlinx-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.4.0" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-core = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
logback-android = { module = "com.github.tony19:logback-android", version = "3.0.0" }
logback-classic = { module = "ch.qos.logback:logback-classic", version = "1.5.20" }
logcat = { module = "com.squareup.logcat:logcat", version = "0.4" }
markdown-core = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "markdown" }
markdown-m3 = { module = "com.mikepenz:multiplatform-markdown-renderer-m3", version.ref = "markdown" }
material = { module = "com.google.android.material:material", version = "1.13.0" }
molecule = { module = "app.cash.molecule:molecule-runtime", version = "2.2.0" }
okio = { module = "com.squareup.okio:okio", version = "3.16.2" }
preferences-android = { module = "dev.jonpoulton.preferences:android", version.ref = "preferences" }
preferences-core = { module = "dev.jonpoulton.preferences:core", version.ref = "preferences" }
redacted-annotations = { module = "dev.zacsweers.redacted:redacted-compiler-plugin-annotations", version.ref = "redacted" }
slf4j = { module = "org.slf4j:slf4j-api", version = "2.0.17" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-dialect = { module = "app.cash.sqldelight:sqlite-3-38-dialect", version.ref = "sqldelight" }
sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-json = { module = "app.cash.sqldelight:sqlite-json-module", version.ref = "sqldelight" }
sqldelight-primitive = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
vico-multiplatform = { module = "com.patrykandpatrick.vico:multiplatform", version = "2.2.1" }

# Testing
test-alakazam-core = { module = "dev.jonpoulton.alakazam:testing-core", version.ref = "alakazam" }
test-alakazam-sqldelight = { module = "dev.jonpoulton.alakazam:testing-sqldelight", version.ref = "alakazam" }
test-androidx-arch = { module = "androidx.arch.core:core-testing", version = "2.2.0" }
test-androidx-compose-ui-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "composeAndroidx" }
test-androidx-coreKtx = { module = "androidx.test:core-ktx", version = "1.7.0" }
test-androidx-junit = { module = "androidx.test.ext:junit", version = "1.3.0" }
test-androidx-monitor = { module = "androidx.test:monitor", version = "1.8.0" }
test-androidx-rules = { module = "androidx.test:rules", version = "1.7.0" }
test-androidx-runner = { module = "androidx.test:runner", version = "1.7.0" }
test-assertk = { module = "com.willowtreeapps.assertk:assertk", version = "0.28.1" }
test-burst = { module = "app.cash.burst:burst", version.ref = "burst" }
test-burstCoroutines = { module = "app.cash.burst:burst-coroutines", version.ref = "burst" }
test-junit = { module = "junit:junit", version = "4.13.2" }
test-kotlin-common = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
test-kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
test-ktor = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
test-mockk = { module = "io.mockk:mockk", version = "1.14.6" }
test-robolectric = { module = "org.robolectric:robolectric", version = "4.16" }
test-turbine = { module = "app.cash.turbine:turbine", version = "1.2.1" }

[plugins]
agp-app = { id = "com.android.application", version.ref = "agp" }
agp-lib = { id = "com.android.library", version.ref = "agp" }
androidCacheFix = { id = "org.gradle.android.cache-fix", version = "3.0.2" }
atlas = { id = "dev.jonpoulton.atlas.graphviz", version = "0.2.0" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version = "5.7.0" }
burst = { id = "app.cash.burst", version.ref = "burst" }
catalog = { id = "dev.jonpoulton.catalog", version = "0.4.0" }
compose = { id = "org.jetbrains.compose", version = "1.10.0-alpha02" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version = "1.0.0-rc02" }
detekt = { id = "dev.detekt", version = "2.0.0-alpha.1" }
doctor = { id = "com.osacky.doctor", version = "0.12.1" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-powerAssert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version = "0.9.3" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
licensee = { id = "app.cash.licensee", version = "1.14.1" }
manifestLock = { id = "io.github.gmazzo.android.manifest.lock", version = "1.3.5" }
metro = { id = "dev.zacsweers.metro", version = "0.7.1" }
redacted = { id = "dev.zacsweers.redacted", version.ref = "redacted" }
shadow = { id = "com.gradleup.shadow", version = "9.2.2" }
spotless = { id = "com.diffplug.spotless", version = "8.0.0" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

convention-android-base = { id = "aktual.convention.android.base" }
convention-compose = { id = "aktual.convention.compose" }
convention-idea = { id = "aktual.convention.idea" }
convention-kotlin-jvm = { id = "aktual.convention.kotlin.jvm" }
convention-kover = { id = "aktual.convention.kover" }
convention-style = { id = "aktual.convention.style" }
convention-spotless = { id = "aktual.convention.spotless" }
convention-test = { id = "aktual.convention.test" }

module-android = { id = "aktual.module.android" }
module-compose = { id = "aktual.module.compose" }
module-di = { id = "aktual.module.di" }
module-jvm = { id = "aktual.module.jvm" }
module-multiplatform = { id = "aktual.module.multiplatform" }
module-viewmodel = { id = "aktual.module.viewmodel" }
